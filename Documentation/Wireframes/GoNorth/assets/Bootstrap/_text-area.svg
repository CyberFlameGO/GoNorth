<svg xmlns="http://www.w3.org/2000/svg" id="svg2" width="100" height="116" onload="onLoad(evt)" onresize="onResize(evt)" version="1.1"><title id="title2818">WireframeSketcher SVG asset</title><metadata id="metadata7"/><script><![CDATA[
 var doc, svg, field, grip, text;
 var scrollbar, scrollbarFrame, scrollbarThumb, scrollbarArrowDown, scrollbarArrowDownSeparator, scrollbarArrowUp, scrollbarArrowUpSeparator;
 var defaultWidth, defaultHeight, defaultScrollbarHeight;
 var hPadding = 12, vPadding = 6;
 
 function onLoad(evt) {
	svg = evt.target;
	doc = svg.ownerDocument;
	field = doc.getElementById("field");
	grip = doc.getElementById("grip");
	scrollbar = doc.getElementById("scrollbar");
	scrollbarFrame = doc.getElementById("scrollbar-frame");
	scrollbarThumb = doc.getElementById("scrollbar-thumb");
	scrollbarArrowDown = doc.getElementById("scrollbar-arrow-down");
	scrollbarArrowDownSeparator = doc.getElementById("scrollbar-arrow-down-separator");
	scrollbarArrowUp = doc.getElementById("scrollbar-arrow-up");
	scrollbarArrowUpSeparator = doc.getElementById("scrollbar-arrow-up-separator");
 	defaultScrollbarHeight = parseInt(scrollbarFrame.getAttribute("height"));
	text = doc.createElement("foreignObject");
	text.setAttribute("id", "item");
	text.setAttribute("fill", "white");
	svg.appendChild(text);
 	defaultWidth = parseInt(svg.getAttribute("width"));
 	defaultHeight = parseInt(svg.getAttribute("height"));
 }
 
 function onResize(evt) {
 	var width = parseInt(svg.getAttribute("width"));
 	var height = parseInt(svg.getAttribute("height"));
 	
 	field.setAttribute("width", width - 2);
 	field.setAttribute("height", height - 2);
 	
	text.setAttribute("x", hPadding);
	text.setAttribute("width", width - hPadding * 2 - ($model.verticalScrollbar ? 18 : 0));
	text.setAttribute("y", vPadding);
	text.setAttribute("height", height - vPadding * 2);
	
	if($model.state == State.DISABLED) {
		field.setAttribute("stroke", "#ccc");
		field.setAttribute("fill", "#eee");
		text.setAttribute("stroke", "#555");
		text.removeAttribute("fill");
	} else if($model.state == State.FOCUSED) {
		field.setAttribute("stroke", "#52a8ec");
		field.setAttribute("fill", "white");
		text.removeAttribute("stroke");
		text.setAttribute("fill", "white");
	} else {
		field.setAttribute("stroke", $model.borderColor);
		field.setAttribute("fill", "white");
		text.removeAttribute("stroke");
		text.setAttribute("fill", "white");
	}
	
	grip.setAttribute("transform", "translate(" + (-defaultWidth + width) + "," + (-defaultHeight + height) + ")");
	
	if($model.verticalScrollbar) {
		scrollbar.setAttribute("display", "inline");
		scrollbar.setAttribute("transform", "translate(" + (-defaultWidth + width) + ",0)");
		var scrollbarHeight = defaultScrollbarHeight + height - defaultHeight;
		scrollbarFrame.setAttribute("height", scrollbarHeight);
		scrollbarArrowDown.setAttribute("transform", "translate(0," + (-defaultHeight + height) + ")");
		scrollbarArrowDownSeparator.setAttribute("transform", "translate(0," + (-defaultHeight + height) + ")");
		var thumbHeight = Math.round(scrollbarHeight / 4);
		scrollbarThumb.setAttribute("height", thumbHeight);
		var availableHeight = scrollbarHeight - 34;
		if(availableHeight < thumbHeight) {
			scrollbarThumb.setAttribute("display", "none");
		} else {
			scrollbarThumb.setAttribute("display", "inline");
			scrollbarThumb.setAttribute("transform", "translate(0," + (Math.round((availableHeight - thumbHeight) * $model.value / 100)) + ")");
		}
		
		if($model.state == State.DISABLED) {
			scrollbar.setAttribute("stroke", "#ccc");
			scrollbarArrowUp.setAttribute("fill", "#ccc");
			scrollbarArrowDown.setAttribute("fill", "#ccc");
		} else {
			scrollbar.setAttribute("stroke", "#000");
			scrollbarArrowUp.setAttribute("fill", "#000");
			scrollbarArrowDown.setAttribute("fill", "#000");
		}
	} else {
		scrollbar.setAttribute("display", "none");
	}
 }
 
 function getPreferredSize() {
 	return { width: $item.width + hPadding * 2 + ($model.verticalScrollbar ? 18 : 0), height: $item.height + vPadding * 2 };
 }
 ]]></script><rect id="field" width="98" x="1" y="1" stroke-linejoin="round" style="color:#000;enable-background:accumulate" height="114" fill="#FFF" stroke="#000" stroke-dasharray="none" stroke-dashoffset="0" stroke-linecap="round" stroke-miterlimit="4" stroke-width="2" ry="4"/><g id="grip" fill="none" stroke="#000" stroke-dasharray="none" stroke-linecap="round" stroke-linejoin="miter" stroke-miterlimit="4" stroke-width="2"><path id="path3792" d="M93,112,96,109"/><path id="path3794" d="M89,112,96,105"/></g><g id="scrollbar" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="4" stroke-width="2"><rect id="scrollbar-frame" width="15" height="98" x="81" y="4" fill="#FFF" stroke-dasharray="none" stroke-dashoffset="0"/><path id="scrollbar-arrow-up-separator" fill="none" stroke-dasharray="none" d="M81,17,96,17"/><path id="scrollbar-arrow-down-separator" fill="none" stroke-dasharray="none" d="M81,89,96,89"/><path id="scrollbar-arrow-up" fill="#000" stroke-dasharray="none" stroke-dashoffset="0" d="M88.5,7.5,92,12.5,85,12.5,88.5,7.5z"/><path id="scrollbar-arrow-down" fill="#000" stroke-dashoffset="0" d="M88.5,98.5,92,93.5,85,93.5,88.5,98.5z"/><rect id="scrollbar-thumb" width="7" height="19" x="85" y="21" fill="#CCC" stroke-dasharray="none" stroke-dashoffset="0"/></g></svg>